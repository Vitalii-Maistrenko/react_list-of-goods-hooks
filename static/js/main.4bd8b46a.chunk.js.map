{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","initialState","sortedGoods","showResetButton","useState","state","setState","sortByAlphabeticallyActive","sortByLengthActive","reverseActive","updateState","updatedState","prevState","sortArray","sortFunction","activeSort","sortedArray","sort","setActiveState","resetArray","generateButtonClass","isActive","className","type","onClick","a","b","localeCompare","length","reversedArray","reverse","reverseArray","map","item","ReactDOM","render","document","getElementById"],"mappings":"mNAIMA,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAWWC,EAAgB,WAC3B,IAAMC,EAAsB,CAC1BC,YAAY,GAAD,OAAMH,GACjBI,iBAAiB,GAGnB,EAA0BC,mBAAgBH,GAA1C,mBAAOI,EAAP,KAAcC,EAAd,KAGEJ,EAKEG,EALFH,YACAC,EAIEE,EAJFF,gBACAI,EAGEF,EAHFE,2BACAC,EAEEH,EAFFG,mBACAC,EACEJ,EADFI,cASIC,EAAc,SAACC,GACnBL,GAAS,SAAAM,GAAS,kCACbA,GACAD,OAIDE,EAAY,SAACC,EACRC,GACT,IAAMC,EAAc,YAAId,GAAae,KAAKH,GAE1CJ,EAAY,aACVR,YAAac,EACbb,iBAAiB,GAnBE,SAACY,GAAD,MAAyB,CAC9CR,2BAA2C,iBAAfQ,EAC5BP,mBAAmC,WAAfO,EACpBN,cAA8B,YAAfM,GAiBVG,CAAeH,MAahBI,EAAa,WACjBb,EAASL,IAmBLmB,EAAsB,SAACC,GAAD,uBAAiCA,EAAW,GAAK,aAE7E,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,UAAKF,IAAsBb,GAA3B,YACTiB,QAxBmB,WACzBX,GAAU,SAACY,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,KAAI,iBAoBpC,iCAOA,wBACEH,KAAK,SACLD,UAAS,UAAKF,IAAsBZ,GAA3B,eACTgB,QA3Ba,WACnBX,GAAU,SAACY,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,SAAQ,WAuBrC,4BAOA,wBACEL,KAAK,SACLD,UAAS,UAAKF,IAAsBX,GAA3B,eACTe,QA9Bc,WAChBf,EACFU,IAvBiB,WACnB,IAAMU,EAAgB,YAAI3B,GAAa4B,UAEvCpB,EAAY,CACVR,YAAa2B,EACbpB,eAAgBA,IAoBhBsB,IAuBE,qBAOC5B,GACC,wBACEoB,KAAK,SACLD,UAAU,mBACVE,QAASL,EAHX,sBASJ,6BACGjB,EAAY8B,KAAI,SAAAC,GAAI,OACnB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCjInBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4bd8b46a.chunk.js","sourcesContent":["\nimport 'bulma/css/bulma.css';\nimport React, { useState } from 'react';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  sortedGoods: string[];\n  showResetButton: boolean;\n  sortByAlphabeticallyActive?: boolean;\n  sortByLengthActive?: boolean;\n  reverseActive?: boolean;\n}\n\nexport const App: React.FC = () => {\n  const initialState: State = {\n    sortedGoods: [...goodsFromServer],\n    showResetButton: false,\n  };\n\n  const [state, setState] = useState<State>(initialState);\n\n  const {\n    sortedGoods,\n    showResetButton,\n    sortByAlphabeticallyActive,\n    sortByLengthActive,\n    reverseActive,\n  } = state;\n\n  const setActiveState = (activeSort: string) => ({\n    sortByAlphabeticallyActive: activeSort === 'alphabetical',\n    sortByLengthActive: activeSort === 'length',\n    reverseActive: activeSort === 'reverse',\n  });\n\n  const updateState = (updatedState: Partial<State>) => {\n    setState(prevState => ({\n      ...prevState,\n      ...updatedState,\n    }));\n  };\n\n  const sortArray = (sortFunction: (a: string, b: string)\n  => number, activeSort: string) => {\n    const sortedArray = [...sortedGoods].sort(sortFunction);\n\n    updateState({\n      sortedGoods: sortedArray,\n      showResetButton: true,\n      ...setActiveState(activeSort),\n    });\n  };\n\n  const reverseArray = () => {\n    const reversedArray = [...sortedGoods].reverse();\n\n    updateState({\n      sortedGoods: reversedArray,\n      reverseActive: !reverseActive,\n    });\n  };\n\n  const resetArray = () => {\n    setState(initialState);\n  };\n\n  const sortAlphabetically = () => {\n    sortArray((a, b) => a.localeCompare(b), 'alphabetical');\n  };\n\n  const sortByLength = () => {\n    sortArray((a, b) => a.length - b.length, 'length');\n  };\n\n  const handleReverse = () => {\n    if (reverseActive) {\n      resetArray();\n    } else {\n      reverseArray();\n    }\n  };\n\n  const generateButtonClass = (isActive: boolean) => `button ${isActive ? '' : 'is-light'}`;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`${generateButtonClass(!!sortByAlphabeticallyActive)} is-info`}\n          onClick={sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n        <button\n          type=\"button\"\n          className={`${generateButtonClass(!!sortByLengthActive)} is-success`}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n        <button\n          type=\"button\"\n          className={`${generateButtonClass(!!reverseActive)} is-warning`}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n        {showResetButton && (\n          <button\n            type=\"button\"\n            className=\"button is-danger\"\n            onClick={resetArray}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n      <ul>\n        {sortedGoods.map(item => (\n          <li key={item} data-cy=\"Good\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}